
- name: tomcat Group
  group:
    name: tomcat

- name: tomcat User
  user:
    name: tomcat
    groups: tomcat

- name: Tomcat Download
  unarchive:
    src: "{{ tomcat.src }}"
    dest: /tmp
    remote_src: yes
    creates: "/tmp/{{ tomcat.root_dir }}"
  register: tomcat_download

- name: Remove {{ tomcat.path }} if new Tomcat downloaded
  when: tomcat_download is changed
  file:
    path: "{{ tomcat.path }}"
    state: absent

- name: Install tomcat
  command: "cp -R /tmp/{{ tomcat.root_dir }} {{ tomcat.path }}"
  args:
    creates: "{{ tomcat.path }}"

- name: Cleanup default webapps
  file:
    path: "{{ tomcat.webapps }}/{{ item }}"
    state: absent
  with_items:
    - ROOT
    - manager
    - host-manager
    - examples
    - docs

- name: Install Config Files
  import_tasks: config.yml

- name: Set Ownership
  file:
    path: "{{ tomcat.path }}"
    owner: tomcat
    group: tomcat
    recurse: yes