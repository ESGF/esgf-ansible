
# Get globus tools and libraries
- name: Import Globus GPG key
  rpm_key:
    key: http://www.globus.org/ftppub/globus-connect-server/RPM-GPG-KEY-Globus

- name: Download globus-connect-server .rpm file
  get_url:
    url: http://toolkit.globus.org/ftppub/globus-connect-server/globus-connect-server-repo-latest.noarch.rpm
    dest: /tmp/globus-connect-server-repo-latest.noarch.rpm

- name: Install globus-connect-server .rpm file
  package:
    name: /tmp/globus-connect-server-repo-latest.noarch.rpm

- name: Add ESGF RPM Repo
  template:
    src: esgf.repo.j2
    dest: /etc/yum.repos.d/esgf.repo

# Temp gridftp cert and key
- name: Copy temp gftp hostkey into place
  when: gftphostkey is not defined
  copy:
    src: "{{ tempca.local.host.key }}"
    dest: "{{ grid_security.host.key }}"
    mode: 600

- name: Copy temp gftp hostcert into place
  when: gftphostcert is not defined
  copy:
    src: "{{ tempca.local.host.cert }}"
    dest: "{{ grid_security.host.cert }}"

- name: Create directory to hold GridFTP key and CSR
  local_action:
    module: file
    path: "{{ lookup('env', 'HOME') }}/esgf_globus"
    state: directory
  when: gftphostkey is not defined

- name: Create new gtfp hostkey
  when: gftphostkey is not defined
  local_action:
    module: openssl_privatekey
    path: "{{ lookup('env', 'HOME') }}/esgf_globus/gftphostkey.pem"

- name: Create gftp CA CSR
  local_action:
    module: openssl_csr
    path: "{{ lookup('env', 'HOME') }}/esgf_globus/gftphost.csr"
    privatekey_path: "{{ lookup('env', 'HOME') }}/esgf_globus/gftphostkey.pem"
    common_name: "{{ ansible_nodename }}"

# Trusted, signed, gridftp cert and key
- name: Copy gftp hostkey into place
  when: gftphostkey is defined
  copy:
    src: "{{ gftphostkey }}"
    dest: "{{ grid_security.host.key }}"
    mode: 600

- name: Copy gftp hostcert into place
  when: gftphostcert is defined
  copy:
    src: "{{ gftphostcert }}"
    dest: "{{ grid_security.host.cert }}"