
- name: start httpd
  service:
    name: httpd
    state: started

- name: start tomcat
  command: "nohup {{ tomcat_ctrl }} start"

- name: start postgres
  service:
    name: postgresql
    state: started

- name: start cog
  when: "'index' in group_names"
  command: "{{ cog.wsgi_dir }}/apachectl start"

- name: Load solr startup file
  when: "'index' in group_names"
  slurp:
    src: "{{ esg.config.dir }}/shards_startup.yml"
  register: shard_startup_file

- name: Load existing shards
  when: "'index' in group_names"
  set_fact:
    existing_shards: "{{ shard_startup_file['content'] | b64decode | from_yaml }}"

- name: start solr shards
  when: "'index' in group_names"
  become: yes
  become_user: solr
  command: "{{ solr.path }}/bin/solr start -s {{ solr.home }}/{{ shard.name }}-{{ shard.port }} -p {{ shard.port }} -a {{ shard.args }}"
  loop: "{{ existing_shards }}"
  loop_control:
    loop_var: shard

- name: start myproxy-server
  when: "'idp' in group_names"
  service:
    name: myproxy-server
    state: started

- name: start slcs
  when: "'idp' in group_names"
  command: "{{ slcs.wsgi_dir }}/apachectl start"

- name: start dashboard information provider
  when: "'data' in group_names"
  shell: "{{ dashboard.ip.ctrl_script }} start &>> {{ dashboard.ip.log }}"

- name: start globus-gridftp-server
  when: "'data' in group_names"
  service:
    name: globus-gridftp-server
    state: started