
- name: Open data ports
  when: "'data' in group_names"
  include_tasks: io_ports.yml

- name: Open IdP ports
  when: "'idp' in group_names"
  include_tasks: id_ports.yml

# Get globus tools and libraries
- name: Import Globus GPG key
  rpm_key:
    key: https://downloads.globus.org/toolkit/gt6/stable/repo/rpm/RPM-GPG-KEY-Globus
  vars:
    ansible_python_interpreter: "{{ conda.prefix }}/bin/python"

- name: Download globus-connect-server .rpm file
  command: wget https://downloads.globus.org/toolkit/globus-connect-server/globus-connect-server-repo-latest.noarch.rpm
  args:
    chdir: /tmp

- name: Install globus-connect-server .rpm file
  package:
    name: /tmp/globus-connect-server-repo-latest.noarch.rpm

- name: Add ESGF RPM Repo
  template:
    src: esgf.repo.j2
    dest: /etc/yum.repos.d/esgf.repo

- name: Install plugin-priorites
  yum:
    name: yum-plugin-priorities

- name: Install Globus Connect Server
  yum:
    disable_gpg_check: yes
    name:
      - globus-connect-server
      - globus-authz-esgsaml-callout
      - globus-gaa
      - globus-adq
      - customgsiauthzinterface
      - perl-DBD-Pg
      - mhash
      - pam-pgsql

- name: Install Globus Connect Server Config
  template:
    src: globus-connect-server-esgf.conf.j2
    dest: /etc/globus-connect-server.conf
    mode: 0600
    owner: "{{ 'myproxy' if 'idp' in group_names else 'root' }}"
    group: "{{ 'myproxy' if 'idp' in group_names else 'root' }}"

- name: Create needed Globus directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ grid_security.dir }}"
    - "{{ grid_security.cert_dir }}"

- name: Register Globus Connect Server
  when:
    - globus_user is defined
    - globus_pass is defined
  command: 'globus-connect-server-setup --force'

- name: Include Globus Certs
  include_role:
    name: globus_certs

- name: Run GridFTP tasks
  when: "'data' in group_names"
  include_tasks: gridftp.yml

- name: Run IdP tasks
  when: "'idp' in group_names"
  include_tasks: myproxy.yml