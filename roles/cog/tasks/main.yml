
- name: Install required libraries for CoG
  package:
    name:
      - httpd-devel
      - sqlite-devel

- name: Clone CoG Repo
  git:
    repo: "{{ cog.repo }}"
    dest: "{{ cog.dest }}"
    version: "{{ cog.version }}"
  register: cog_clone

# - name: Clone Transfer API Client Repo
#   git:
#     repo: "https://github.com/globusonline/transfer-api-client-python.git"
#     dest: "{{ cog.base }}/transfer-api-client-python"

- name: Create CoG conda env
  command: "{{ conda.exe }} create -y -n cog 'python<3' pip"
  args:
    creates: "{{ conda.envs }}/cog"
  register: cog_env

- name: Install CoG Requirments
  shell: >
    {{ conda.actv }} cog && \
    pip install 'mod_wsgi<4.6' 'git+https://github.com/EarthSystemCoG/django-openid-auth.git#egg=django-openid-auth' -r requirements.txt
  args:
    chdir: "{{ cog.dest }}"
    creates: "{{ conda.envs }}/cog/{{ conda.mods }}/mod_wsgi*"

- name: Install CoG into conda env
  shell: >
    {{ conda.actv }} cog && \
    python setup.py --quiet install
  args:
    chdir: "{{ cog.dest }}"
    creates: "{{ conda.envs }}/cog/{{ conda.mods }}/cog*"

- name: Setup CoG
  shell: >
    {{ conda.actv }} cog && \
    python setup.py setup_cog --esgf=true
  args:
    chdir: "{{ cog.dest }}"

- name: CoG collectstatic
  shell: >
    {{ conda.actv }} cog && \
    python manage.py collectstatic --no-input
  args:
    chdir: "{{ cog.dest }}"

- name: Setup CoG mod_wsgi-express server
  shell: >
    {{ conda.actv }} cog && \
    mod_wsgi-express setup-server apache/wsgi.py \
    --server-root {{ cog.wsgi_dir }} \
    --user apache --group apache \
    --host localhost --port 8889 \
    --url-alias /static {{ cog.dest }}/static/
  args:
    chdir: "{{ cog.dest }}"
    creates: "{{ cog.wsgi_dir }}"

# - name : Install the cog proxy config
#   template:
#     src: "httpd{{ httpd_version }}/cog.httpd.conf.j2"
#     dest: "{{ httpd.ssl_proxy_dir }}/9cog.conf"

- name: Set Ownership
  file:
    path: "{{ cog.base }}"
    owner: apache
    group: apache
    recurse: yes