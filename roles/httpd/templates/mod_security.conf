LoadModule security2_module modules/mod_security2.so

<IfModule !mod_unique_id.c>
    LoadModule unique_id_module modules/mod_unique_id.so
</IfModule>
<IfModule mod_security2.c>
    # ModSecurity Core Rules Set configuration
	Include modsecurity.d/*.conf
	Include modsecurity.d/activated_rules/*.conf

    SecDefaultAction "phase:2,pass,log" 
    # Default recommended configuration
    SecRuleEngine On
    SecRequestBodyAccess On
    SecRule REQUEST_HEADERS:Content-Type "text/xml" \
         "id:'200000',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"
    SecRequestBodyLimit 13107200
    SecRequestBodyNoFilesLimit 131072
    SecRequestBodyInMemoryLimit 131072
    SecRequestBodyLimitAction Reject
    SecRule REQBODY_ERROR "!@eq 0" \
    "id:'200001', phase:2,t:none,log,deny,status:400,msg:'Failed to parse request body.',logdata:'%{reqbody_error_msg}',severity:2"
    SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
    "id:'200002',phase:2,t:none,log,deny,status:44,msg:'Multipart request body \
    failed strict validation: \
    PE %{REQBODY_PROCESSOR_ERROR}, \
    BQ %{MULTIPART_BOUNDARY_QUOTED}, \
    BW %{MULTIPART_BOUNDARY_WHITESPACE}, \
    DB %{MULTIPART_DATA_BEFORE}, \
    DA %{MULTIPART_DATA_AFTER}, \
    HF %{MULTIPART_HEADER_FOLDING}, \
    LF %{MULTIPART_LF_LINE}, \
    SM %{MULTIPART_MISSING_SEMICOLON}, \
    IQ %{MULTIPART_INVALID_QUOTING}, \
    IP %{MULTIPART_INVALID_PART}, \
    IH %{MULTIPART_INVALID_HEADER_FOLDING}, \
    FL %{MULTIPART_FILE_LIMIT_EXCEEDED}'"

    SecRule MULTIPART_UNMATCHED_BOUNDARY "!@eq 0" \
    "id:'200003',phase:2,t:none,log,deny,status:44,msg:'Multipart parser detected a possible unmatched boundary.'"

    SecPcreMatchLimit 1000
    SecPcreMatchLimitRecursion 1000

    SecRule TX:/^MSC_/ "!@streq 0" \
            "id:'200004',phase:2,t:none,deny,msg:'ModSecurity internal error flagged: %{MATCHED_VAR_NAME}'"

    SecResponseBodyAccess Off
    SecDebugLog /var/log/httpd/modsec_debug.log
    SecDebugLogLevel 0
    SecAuditEngine RelevantOnly
    SecAuditLogRelevantStatus "^(?:5|4(?!04))"
    SecAuditLogParts ABIJDEFHZ
    SecAuditLogType Serial
    SecAuditLog /var/log/httpd/modsec_audit.log
    SecArgumentSeparator &
    SecCookieFormat 0
    SecTmpDir /var/lib/mod_security
    SecDataDir /var/lib/mod_security

    #Lots of browsers don't send accept header so disable rule 960015 which blocks that:
    SecRuleRemoveById 960015

    #ModSecurity does not handle gzip files and falsely alerts code leakage for such binary files so disable this rule
    SecRuleRemoveById 970903

    #Range header is set by some Android devices so ignore that rule
    SecRuleRemoveById 958291

    #We allow Google Tag Manager which uses small iframe so disable the rules that disallow small iframes:
    #SecRuleRemoveById 981000
    #SecRuleRemoveById 981001

    #These produce many false positives as checking for things like lots of spaces and ' characters (valid in names and addresses). So disable.
    SecRuleRemoveById 950109
    SecRuleRemoveById 950901
    SecRuleRemoveById 960024
    SecRuleRemoveById 973338
    SecRuleRemoveById 981172
    SecRuleRemoveById 981173
    SecRuleRemoveById 981231
    SecRuleRemoveById 981242
    SecRuleRemoveById 981243
    SecRuleRemoveById 981245
    SecRuleRemoveById 981246
    SecRuleRemoveById 981248
    SecRuleRemoveById 981257
    SecRuleRemoveById 981260
    SecRuleRemoveById 981318
    SecRuleRemoveById 981319
    SecRuleRemoveById 981320

    #Allow Search argument (q) to include SQL words:
    SecRuleUpdateTargetById 959071 !ARGS:'q'
    SecRuleUpdateTargetById 959072 !ARGS:'q'
    SecRuleUpdateTargetById 981247 !ARGS:'q'

    #Passwords can (and arguable should!) contain special chars
    SecRuleUpdateTargetById 950010 !ARGS:'/[pP](ass)?word/'
    SecRuleUpdateTargetById 981240 !ARGS:'/[pP](ass)?word/'

    #Email address can contain some SQL injection phrases
    SecRuleUpdateTargetById 981241 !ARGS:'/[eE](-)?mail/'

    #Remove checking of rules which checks for http calls in arguments will have URLs in them
    SecRuleUpdateTargetById 950007 !ARGS:'utm_referrer'
    SecRuleUpdateTargetById 950120 !ARGS:'utm_referrer'
    SecRuleUpdateTargetById 973304 !ARGS:'utm_referrer'
    SecRuleUpdateTargetById 981241 !ARGS:'utm_referrer'
    SecRuleUpdateTargetById 981256 !ARGS:'utm_referrer'    

</IfModule>